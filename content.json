{"meta":{"title":"booksworm","subtitle":"","description":"booksworm","author":"Zafer Ma","url":"https://candyzfm.github.io","root":"/"},"pages":[{"title":"关于俺","date":"2016-05-24T05:45:13.000Z","updated":"2020-08-02T08:32:24.037Z","comments":false,"path":"about/index.html","permalink":"https://candyzfm.github.io/about/index.html","excerpt":"","text":""},{"title":"search","date":"2020-08-02T08:43:22.000Z","updated":"2020-08-02T12:27:23.997Z","comments":true,"path":"search/index.html","permalink":"https://candyzfm.github.io/search/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-08-02T12:50:27.000Z","updated":"2020-08-02T12:58:57.846Z","comments":true,"path":"categories/index.html","permalink":"https://candyzfm.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-08-02T08:43:22.000Z","updated":"2020-08-02T08:43:44.293Z","comments":true,"path":"tags/index.html","permalink":"https://candyzfm.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"api接口","slug":"api接口","date":"2020-08-01T13:46:25.000Z","updated":"2020-08-02T14:12:33.874Z","comments":true,"path":"2020/08/01/api接口/","link":"","permalink":"https://candyzfm.github.io/2020/08/01/api%E6%8E%A5%E5%8F%A3/","excerpt":"介绍api端口","text":"介绍api端口 查询明细和汇总是否匹配: 123456789101112131415161718192021select *from (select sum(balance + frozen_balance) balance from member_wallet where coin_id not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;)) a, ( select sum((CASE type WHEN 1 THEN -ABS(amount) WHEN 2 THEN -ABS(amount) WHEN 4 THEN (amount - fee) WHEN 5 THEN -(amount + fee) WHEN 17 THEN -(amount) WHEN 21 then 0 WHEN 22 then 0 WHEN 26 then 0 WHEN 27 then 0 WHEN 28 then 0 WHEN 30 then 0 WHEN 31 then 0 ELSE amount END)) as balance_desc from member_transaction where symbol not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;)) b symbol分组查询 明细和汇总: 1234567891011121314151617181920212223242526select a.*,b.balance_descfrom (select coin.unit,sum(balance + frozen_balance) as balance from member_wallet LEFT JOIN coin on (coin.name &#x3D; member_wallet.coin_id) GROUP BY coin_id ) a left JOIN ( select symbol, sum((CASE type WHEN 1 THEN -ABS(amount) WHEN 2 THEN -ABS(amount) WHEN 4 THEN (amount - fee) WHEN 5 THEN -(amount + fee) WHEN 17 THEN -(amount) WHEN 21 then 0 WHEN 22 then 0 WHEN 26 then 0 WHEN 27 then 0 WHEN 28 then 0 WHEN 30 then 0 WHEN 31 then 0 ELSE amount END)) as balance_desc from member_transaction where symbol not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;) GROUP BY symbol) b on (b.symbol &#x3D; a.unit) 根据id查询 12345678910111213141516171819202122232425262728293031select d.*from ( select member_wallet.member_id, coin.unit, if(sum(mt.amount_base) is null, 0, sum(mt.amount_base)) as sum_amount, balance + frozen_balance as sum_balance from member_wallet LEFT JOIN coin on member_wallet.coin_id &#x3D; coin.name LEFT JOIN (select *, (CASE type WHEN 1 THEN -ABS(amount) WHEN 2 THEN -ABS(amount) WHEN 4 THEN (amount - fee) WHEN 5 THEN -(amount + fee) WHEN 17 THEN -(amount) WHEN 21 then 0 WHEN 22 then 0 WHEN 26 then 0 WHEN 27 then 0 WHEN 28 then 0 WHEN 30 then 0 WHEN 31 then 0 ELSE amount END) as amount_base from member_transaction where member_id &#x3D; :member_id) mt on (mt.symbol &#x3D; coin.unit) where coin_id not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;) and member_wallet.member_id &#x3D; :member_id and (member_wallet.balance !&#x3D; 0 or member_wallet.frozen_balance !&#x3D; 0) GROUP BY member_wallet.coin_id ) dwhere d.sum_amount !&#x3D; d.sum_balance 根据id查询 12345678910111213141516171819202122232425262728293031323334select d.*from ( select member_wallet.member_id, coin.unit, if(sum(mt.amount_base) is null, 0, sum(mt.amount_base)) as sum_amount, balance + frozen_balance as sum_balance from member_wallet LEFT JOIN coin on member_wallet.coin_id &#x3D; coin.name LEFT JOIN (select *, (CASE type WHEN 1 THEN -ABS(amount) WHEN 2 THEN -ABS(amount) WHEN 4 THEN (amount - fee) WHEN 5 THEN -(amount + fee) WHEN 17 THEN -(amount) WHEN 21 then 0 WHEN 22 then 0 WHEN 26 then 0 WHEN 27 then 0 WHEN 28 then 0 WHEN 30 then 0 WHEN 31 then 0 WHEN 38 THEN 0 WHEN 39 THEN ABS( amount ) WHEN 40 THEN - amount ELSE amount END) as amount_base from member_transaction where member_id &#x3D; 2583948) mt on (mt.symbol &#x3D; coin.unit) where coin_id in (&quot;SCO&quot;, &quot;USDT&quot;) and member_wallet.member_id &#x3D; 2583948 and (member_wallet.balance !&#x3D; 0 or member_wallet.frozen_balance !&#x3D; 0) GROUP BY member_wallet.coin_id ) dwhere d.sum_amount !&#x3D; d.sum_balance 用户分组查询 明细和汇总: 12345678910111213141516171819202122232425262728293031323334select *from ( select a.*,b.balance_desc from (select member_id,sum(balance + frozen_balance) balance from member_wallet LEFT JOIN coin on (coin.name &#x3D; member_wallet.coin_id) where member_wallet.coin_id not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;) GROUP BY member_id ) a left JOIN ( select member_id, sum((CASE type WHEN 1 THEN -ABS(amount) WHEN 2 THEN -ABS(amount) WHEN 4 THEN (amount - fee) WHEN 5 THEN -(amount + fee) WHEN 17 THEN -(amount) WHEN 21 then 0 WHEN 22 then 0 WHEN 26 then 0 WHEN 27 then 0 WHEN 28 then 0 WHEN 30 then 0 WHEN 31 then 0 WHEN 35 then 0 ELSE amount END)) as balance_desc from member_transaction where symbol not in (&quot;MON&quot;, &quot;USDX&quot;, &quot;USDE&quot;, &quot;BTCC&quot;) GROUP BY member_id ) b on (b.member_id &#x3D; a.member_id) ) ccwhere cc.balance !&#x3D; 0 and (cc.balance_desc is not null or cc.balance_desc !&#x3D; 0) and cc.balance_desc !&#x3D; cc.balance 导出exchange_order的SQL 1234567891011121314151617181920212223SELECT o.order_id, o.amount, o.base_symbol, FROM_UNIXTIME( o.canceled_time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;canceled_time&#39;, o.coin_symbol, FROM_UNIXTIME( o.completed_time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;completed_time&#39;, o.direction, o.member_id, o.price, o.&#96;status&#96;, o.symbol, FROM_UNIXTIME( o.time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;time&#39;, o.traded_amount, o.turnover, o.type, o.margin_trade, o.burst_trade, o.check_flag FROM exchange_order o WHERE member_id &#x3D; 2583743; exchange_order包含detail 1234567891011121314151617181920212223242526272829SELECT o.order_id, o.amount, o.base_symbol, FROM_UNIXTIME( o.canceled_time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;canceled_time&#39;, o.coin_symbol, FROM_UNIXTIME( o.completed_time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;completed_time&#39;, o.direction, o.member_id, o.price, o.&#96;status&#96;, o.symbol, FROM_UNIXTIME( o.time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;time&#39;, o.traded_amount, o.turnover, o.type, o.margin_trade, o.burst_trade, o.check_flag, d.price AS &#39;detail_price&#39;, d.amount AS &#39;detail_amount&#39;, d.turnover AS &#39;detail_turnover&#39;, d.fee AS fee, FROM_UNIXTIME( d.time &#x2F; 1000, &#39;%Y-%m-%d %T&#39; ) AS &#39;detail_time&#39; FROM exchange_order_detail d RIGHT JOIN exchange_order o ON o.order_id &#x3D; d.orderId WHERE o.member_id &#x3D; 2583743 活动SQL 例如： 为庆祝PTR正式上线，EZB平台将于新加坡时间6月10日16:00—7月9日16:00期间推出交易送PTR活动。活动：交易瓜分100万PTR！活动期间，凡在EZB平台参与PTR交易的实名用户（交易量=买入量+卖出量），即可参与瓜分100万 PTR。活动规则：活动期间，按PTR交易量排名Top1-Top50的实名用户，根据每位用户PTR交易量占Top50用户PTR交易总量的占比，瓜分100万PTR奖励。活动时间：2019年6月10日 16：00——2019年7月9日 16：00 新加坡时间。 1234567891011121314151617SELECT mt.member_id, m.username, symbol, sum( CASE type WHEN 0 THEN amount WHEN 1 THEN - amount WHEN 3 THEN amount END ) AS 净值 FROM member_transaction mt, member m WHERE mt.member_id &#x3D; m.id AND symbol &#x3D; &#39;PTR&#39; AND create_time &gt;&#x3D; &#39;2019-06-10 16:00:00&#39; AND create_time &lt;&#x3D; &#39;2019-07-09 15:59:59&#39; GROUP BY member_id ORDER BY 净值 DESC; 12345678910111213141516SELECT mt.member_id, m.username, symbol, sum( CASE type WHEN 0 THEN amount WHEN 1 THEN - amount WHEN 3 THEN amount END ) AS 净值 FROM member_transaction mt, member m WHERE mt.member_id &#x3D; m.id AND m.real_name_status &#x3D; 2 AND symbol &#x3D; &#39;TITAN&#39; AND create_time &gt;&#x3D; &#39;2019-06-27 16:00:00&#39; AND create_time &lt;&#x3D; &#39;2019-07-27 15:59:59&#39; GROUP BY member_id HAVING 净值 &gt; 0 ORDER BY 净值 DESC; 空投SQL方法 12345678910111213141516public static void main(String[] args) &#123; String [] memberIds = &#123;&#125;; String [] amounts = &#123;&#125;; BigDecimal add = BigDecimal.ZERO; for (int i = 0; i &lt; memberIds.length; i++) &#123; BigDecimal bigDecimal = new BigDecimal(amounts[i]); add = add.add(bigDecimal); System.out.println(&quot;-- &quot; +(i+1)+&quot; 用户id: &quot;+memberIds[i]+&quot; 金额：&quot; +amounts[i]); String str = &quot;update member_wallet set balance = balance+&quot;+amounts[i]+&quot; where member_id = &quot;+memberIds[i]+&quot; and coin_id = &#x27;EOST&#x27;;&quot;; System.out.println(str); String str1 = &quot;INSERT INTO `member_transaction`(`address`, `amount`, `create_time`, `fee`, `flag`, `member_id`, `symbol`, `type`, `withdraw_record_id`) VALUES (&#x27;&#x27;, &quot;+amounts[i]+&quot;, now(), 0, 0, &quot;+memberIds[i]+&quot;, &#x27;EOST&#x27;, 6, 0);&quot;; System.out.println(str1); System.out.println(); &#125; System.out.println(&quot;-- 空投总金额 = &quot; + add); &#125; 锁仓空投方法 12345678910111213141516171819202122232425262728293031323334353637383940414243public static void main(String[] args) throws IOException &#123; String [] memberIds &#x3D; &#123;&quot;40&quot;,&quot;2585862&quot;,&quot;35888&quot;,&quot;17493&quot;&#125;; String [] amounts &#x3D; &#123;&quot;32&quot;,&quot;300&quot;,&quot;45&quot;,&quot;666&quot;&#125;; String coinName &#x3D; &quot;URUS&quot;; String unit &#x3D; &quot;URUS&quot;; String project &#x3D; &quot;airdropLock&quot;; String period &#x3D; &quot;3&quot;; BigDecimal add &#x3D; BigDecimal.ZERO; StringBuilder musicInfo &#x3D; new StringBuilder(); for (int i &#x3D; 0; i &lt; memberIds.length; i++) &#123; BigDecimal bigDecimal &#x3D; new BigDecimal(amounts[i]); add &#x3D; add.add(bigDecimal); String str0 &#x3D; &quot;-- &quot; +(i+1)+&quot; 用户id: &quot;+memberIds[i]+&quot; 金额：&quot; +amounts[i] +&quot;\\r\\n&quot;; System.out.print(str0); String str &#x3D; &quot;INSERT INTO &#96;airdrop_lock_detail&#96; (&#96;lock_time&#96;, &#96;member_id&#96;, &#96;coin_id&#96;, &#96;amount&#96;, &#96;remain_amount&#96;, &#96;period&#96;, &#96;updated_at&#96;) VALUES (NOW(), &quot;+memberIds[i]+&quot;, &#39;&quot;+coinName+&quot;&#39;, &quot;+amounts[i]+&quot;, &quot;+amounts[i]+&quot;, &quot;+period+&quot;, NOW());\\r\\n&quot;; System.out.print(str); String str2 &#x3D; &quot;INSERT INTO &#96;member_wallet_frozen&#96;(&#96;member_id&#96;, &#96;account&#96;, &#96;coin_id&#96;, &#96;project&#96;, &#96;amount&#96;, &#96;updated_at&#96;) VALUES (&quot;+memberIds[i]+&quot;,0,&#39;&quot;+coinName +&quot;&#39;,&#39;&quot;+project+&quot;&#39;,&quot;+amounts[i]+&quot;, now()) ON DUPLICATE KEY UPDATE amount &#x3D; amount + &quot;+amounts[i]+&quot;,updated_at &#x3D; NOW();\\r\\n&quot;; System.out.print(str2); String str1 &#x3D; &quot;INSERT INTO &#96;member_transaction&#96;(&#96;address&#96;, &#96;amount&#96;, &#96;create_time&#96;, &#96;fee&#96;, &#96;flag&#96;, &#96;member_id&#96;, &#96;symbol&#96;, &#96;type&#96;, &#96;withdraw_record_id&#96;) VALUES (&#39;&#39;, &quot;+amounts[i]+&quot;, now(), 0, 0, &quot;+memberIds[i]+&quot;, &#39;&quot;+unit+&quot;&#39;, 6, 0);\\r\\n\\r\\n&quot;; System.out.print(str1); System.out.println(); musicInfo.append(str0).append(str).append(str2).append(str1); &#125; String total &#x3D; &quot;-- 空投总金额 &#x3D; &quot; + add+ &quot;\\r\\n&quot;; System.out.println(total); musicInfo.append(total); String path &#x3D; &quot;E:\\\\data\\\\aaaa.txt&quot;; File file &#x3D; new File(path); if (!file.exists()) &#123; file.getParentFile().mkdirs(); &#125; file.createNewFile(); &#x2F;&#x2F; write 解决中文乱码问题 &#x2F;&#x2F; FileWriter fw &#x3D; new FileWriter(file, true); OutputStreamWriter fw &#x3D; new OutputStreamWriter(new FileOutputStream(file), &quot;UTF-8&quot;); BufferedWriter bw &#x3D; new BufferedWriter(fw); bw.write(musicInfo.toString()); bw.flush(); bw.close(); fw.close(); &#125; 修改为人工审核提币 1UPDATE &#96;withdraw_record&#96; SET &#96;is_auto&#96; &#x3D; 0 WHERE &#96;id&#96; IN (151877,151875,151873); 清除资产 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&#x2F;&#x2F; mysql-- 删除交易记录DELETE FROM &#96;member_transaction&#96; WHERE &#39;symbol&#39; &#x3D; &#39;NODE&#39;;-- 重置钱包UPDATE member_wallet SET balance &#x3D; 0, frozen_balance &#x3D; 0, address &#x3D; null, version &#x3D; 0 WHERE coin_id &#x3D; &#39;NODE&#39;;-- 删除提币DELETE FROM &#96;withdraw_record&#96; WHERE coin_id &#x3D; &#39;NODE&#39;;-- 删除充币DELETE FROM &#96;member_deposit&#96; WHERE unit &#x3D; &#39;NODE&#39;;-- 删除币币订单delete FROM exchange_order where coin_symbol &#x3D; &#39;NODE&#39;;-- 删除币币交易对delete from exchange_coin where coin_symbol &#x3D; &#39;NODE&#39;;-- 删除自选delete from exchange_favor_symbol where symbol &#x3D; &#39;NODE&#x2F;USDT&#39;;-- 删除配置手续费率delete from member_coin where unit &#x3D; &#39;NODE&#39;;-- 删除点差配置delete FROM point_change where symbol &#x3D; &#39;NODE&#x2F;USDT&#39;;-- 删除市值机器人DELETE FROM robot WHERE symbol &#x3D; &#39;NODE&#x2F;USDT&#39;;-- 删除分红delete FROM bar_lock_reward where coin_id &#x3D; &#39;NODE&#39;;-- 更新币种信息 (手动)-- assets_coin_info where unit &#x3D; &#39;NODE&#39;;-- 更新币种资料 (手动)-- coin_content where unit &#x3D; &#39;NODE&#39;;-- 删除币种DELETE FROM coin WHERE unit &#x3D; &#39;NODE&#39;;-- 删除erc20相关DELETE FROM erc20_address WHERE unit &#x3D; &#39;NODE&#39;DELETE FROM erc20_config WHERE unit &#x3D; &#39;NODE&#39;;&#x2F;&#x2F; mongo&#x2F;&#x2F; k线db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_1min&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_5min&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_10min&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_15min&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_30min&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_1hour&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_1day&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_1week&quot;).drop()db.getCollection(&quot;exchange_kline_NODE&#x2F;USDT_1month&quot;).drop()&#x2F;&#x2F; 删除地址db.getCollection(&quot;NODE_address_book&quot;).drop()&#x2F;&#x2F; 删除充值记录db.getCollection(&quot;NODE_deposit&quot;).drop()&#x2F;&#x2F; 删除交易明细db.getCollection(&quot;exchange_trade_NODE&#x2F;USDT&quot;).drop()db.order_detail_aggregation.remove(&#123;&#39;unit&#39;: &#39;NODE&#39;&#125;)db.turnover_statistics.remove(&#123;&#39;unit&#39;: &#39;NODE&#39;&#125;)db.exchange_order_detail.remove(&#123;&#39;coinSymbol&#39;: &#39;NODE&#39;&#125;)db.exchange_turnover_statistics.remove(&#123;&#39;coinSymbol&#39;: &#39;NODE&#39;&#125;)&#x2F;&#x2F; redisdel NODE&#x2F;USDTdel coin:name:NODEdel exchangeApi:favor:*del huoBi:price:NODE&#x2F;USDT","categories":[{"name":"api接口","slug":"api接口","permalink":"https://candyzfm.github.io/categories/api%E6%8E%A5%E5%8F%A3/"}],"tags":[{"name":"api","slug":"api","permalink":"https://candyzfm.github.io/tags/api/"},{"name":"接口文档","slug":"接口文档","permalink":"https://candyzfm.github.io/tags/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"}],"author":"zafer"},{"title":"Hello World","slug":"hello-world","date":"2020-08-01T12:46:25.000Z","updated":"2020-08-02T14:12:32.258Z","comments":true,"path":"2020/08/01/hello-world/","link":"","permalink":"https://candyzfm.github.io/2020/08/01/hello-world/","excerpt":"Hello World的一个demo","text":"Hello World的一个demo Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[],"author":"zafer"}],"categories":[{"name":"api接口","slug":"api接口","permalink":"https://candyzfm.github.io/categories/api%E6%8E%A5%E5%8F%A3/"}],"tags":[{"name":"api","slug":"api","permalink":"https://candyzfm.github.io/tags/api/"},{"name":"接口文档","slug":"接口文档","permalink":"https://candyzfm.github.io/tags/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"}]}